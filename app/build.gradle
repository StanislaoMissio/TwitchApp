plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}

android {
    namespace = "com.example.projecttwitch"
    compileSdkVersion = 32

    defaultConfig {
        applicationId = "com.example.projecttwitch"
        minSdk = 23
        targetSdk = 32
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose = true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://api.twitch.tv/helix/\"")
            buildConfigField("String", "API_OAUTH", "\"https://id.twitch.tv/\"")
            buildConfigField("String", "CLIENT_ID", "\"Client-ID\"")
            buildConfigField("String", "KEY_CLIENT_ID", "\"3vei2jegmxt932jdsh0saduhtkgul0\"")
            buildConfigField("String", "CLIENT_SECRET", "\"v72yqy4dkuzsxduvcql91fjowfl8sl\"")
        }
        debug {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://api.twitch.tv/helix/\"")
            buildConfigField("String", "API_OAUTH", "\"https://id.twitch.tv/\"")
            buildConfigField("String", "CLIENT_ID", "\"Client-ID\"")
            buildConfigField("String", "KEY_CLIENT_ID", "\"3vei2jegmxt932jdsh0saduhtkgul0\"")
            buildConfigField("String", "CLIENT_SECRET", "\"v72yqy4dkuzsxduvcql91fjowfl8sl\"")
        }
    }
}

dependencies {
    def koin_android_version = "3.4.3"
    def koin_androidx_compose_version = "3.4.6"
    def koin_compose_version = "1.0.4"
    def retrofit_version = "2.9.0"
    def okhttp_version = "4.11.0"

    //Koin
    implementation("io.insert-koin:koin-android:$koin_android_version")
    implementation("io.insert-koin:koin-androidx-compose:$koin_androidx_compose_version")
    implementation("io.insert-koin:koin-compose:$koin_compose_version")

    //Retrofit - Okhttp
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.okhttp3:okhttp-android:$okhttp_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_version")



}
